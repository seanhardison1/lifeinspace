load(here::here("data/creeks.rdata"))
creeks <- creeks %>% st_transform(.,crs = ncrs)
hpfs <- c("hp2017.kml",
"hp2018.kml",
"hp2019.kml",
"hp2020.kml",
"hp2022.kml")
load(here::here("data/sbt_dem.rdata"))
stb_dem
stb_dem <- projectRaster(stb_dem, crs = ncrs)
stb_dem
stb_dem <- stb_dem / 1000
stb_dem
load(here::here("data/creeks.rdata"))
creeks <- creeks %>% st_transform(.,crs = ncrs)
hpfs <- c("hp2017.kml",
"hp2018.kml",
"hp2019.kml",
"hp2020.kml",
"hp2022.kml")
hogan_tracks <- NULL
for (i in hpfs){
init <- st_read(here::here("data",i)) %>%
st_cast("LINESTRING") %>%
st_transform(ncrs) %>%
mutate(year = factor(str_extract(i, "\\d{4}")))
assign("hogan_tracks", rbind(init, hogan_tracks))
}
hp_poly <- st_read(here::here("data/hp_poly.kml")) %>%
st_transform(ncrs)
hp_poly_sub <- st_read(here::here("data/hp_poly2.kml")) %>%
st_transform(ncrs)
source(here::here("R/query_osm.R"))
hp_dem <- stb_dem %>%
crop(.,hp_poly_sub)#%>%
# create slope and hillshade
slope = terrain(hp_dem, opt='slope')
aspect = terrain(hp_dem, opt='aspect')
hill = hillShade(slope, aspect, 40, 270)
hill_df <- hill %>%
dream::rst_to_tib(var_name = "slope")
# full dem
hp_dem_df <- hp_dem %>%
dream::rst_to_tib() #%>%
hp_dem_df
# plot(hp_dem)
# query OSM----
process <- F
if (process){
hp_poly2 <- st_read(here::here("data/hp_poly.kml"))# %>%
# st_transform(ncrs)
osm_all_roads <- query_osm(key = "highway",
bb = "hp_poly2")
water <- query_osm(key = "water",
bb = "hp_poly2")
liftlines <-
query_osm(key = "aerialway",
bb = "hp_poly2")
lines <- query_osm(key = "power", bb = "hp_poly2")
natural <- query_osm(key = "natural", bb = "hp_poly2")
natural2 <- query_osm(key = "landuse", bb = "hp_poly2")
bridges <- query_osm(key = "bridge", select = "osm_lines",bb = "hp_poly2")
access <- query_osm(key = "access", select = "osm_polygons",bb = "hp_poly2")
waterway <- query_osm(key = "waterway",
bb = "hp_poly2")
dt_build <- query_osm(key = "building",
bb = "hp_poly2")
away <- query_osm(key = "aerialway",
bb = "hp_poly2")
rodeo <- query_osm(key = "sport",
bb = "hp_poly2")
baseball <- query_osm(key = "leisure",
bb = "hp_poly2")
place <- query_osm(key = "place",
bb = "hp_poly2")
fp <- opq(bbox = st_bbox(hp_poly2)) %>%
add_osm_feature(key = "highway", value = NULL) %>%
osmdata_sf()
save(osm_all_roads,
lines,
baseball,
natural,
natural2,
bridges,
dt_build,
access,
waterway,
water,
away,
rodeo,
file = here::here("data/osm_data.rdata"))
} else {
load(here::here("data/osm_data.rdata"))
}
osm_paths <- osm_all_roads$osm_lines %>%
filter(highway %in% c("path","footway","track","cycleway")) %>%
mutate(is_trail = ifelse(str_detect(name, "Trail"), "Trail","Road")) %>%
st_transform(ncrs)
primary_roads <- osm_all_roads$osm_lines %>%
filter(highway %in% c("primary","trunk")) %>%
st_transform(ncrs)
tertiary <- osm_all_roads$osm_lines %>%
filter(highway %in% c("unclassified","tertiary")) %>%
st_transform(ncrs)
service <- osm_all_roads$osm_lines %>%
filter(highway %in% c("service","track")) %>%
st_transform(ncrs)
trails <- osm_all_roads$osm_lines %>%
filter(highway %in% c("path",
"cycleway",
"track")) %>%
st_transform(ncrs)
ms_lift <- liftlines$osm_lines %>%
filter(name == "Morningside Lift")%>%
st_transform(ncrs)
ms_lift_points <- ms_lift %>%
st_cast("POINT")%>%
st_transform(ncrs)
hw40 <- st_intersection(osm_all_roads$osm_lines %>%
filter(ref == "US 40") %>%
st_transform(ncrs),
hp_poly) %>%
# smooth(., method = "ksmooth", smoothness = 1) %>%
st_union() %>%
st_transform(ncrs)
resort <- natural2$osm_polygons %>%
filter(name == "Steamboat Resort") %>%
st_transform(ncrs) %>%
st_crop(.,hp_poly)
max(hp_dem_df$fill_var)
# steeps
cont1 <- seq(2300, 2800, 55)
length(cont1)
# shallows
step <- 45
# steeps
cont1 <- seq(2300/1000, 2800/1000, 55/1000)
length(cont1)
# shallows
step <- 45
cont2_min <- max(cont1) + step
# shallows
step <- 45/1000
cont2_min <- max(cont1) + step
cont2 <- seq(cont2_min, 3270/1000, step)
length(cont2)
brks <- c(cont1, cont2)
# steeps
cont1 <- seq(2300/1000, 2800/1000, 55/1000)
length(cont1)
# shallows
step <- 45/1000
cont2_min <- max(cont1) + step
cont2 <- seq(cont2_min, 3270/1000, step)
length(cont2)
brks <- c(cont1, cont2)
n <- length(brks)
p1 <- c('#3e5587',
'#C8CBD3')
p2 <- c('#CDCCD4',
'#F0BBB0')
p1 <- c('#3e5587',
"#EEF0F1")
p2 <- c("#F2F3F3",
'#F0BBB0')
p1 <- c('#3e5587',
"#EEF0F1")
p2 <- c("#F2F3F3",
'#E5B3A9')
ws <- c(colorRampPalette(p1)(13),
colorRampPalette(p2)(7))
crk_pal <- "#2E5F8FCC"
track_pal <- c('#DC143CCC',
'#4169E1CC',
'#50C878CC',
'#FFD700CC',
'#800080CC')
track_pal <- c('#17A2B8',
'#FF6B6B',
# '#32CD32',
'#50C878CC',
'#7D3C98',
'#DAA520')
out <-
ggplot() +
geom_raster(data = hill_df,
aes(x = longitude, y = latitude, fill = slope),
show.legend = F) +
scale_fill_gradient(low = "black", high = "white") +
new_scale_fill() +
geom_isobands(data = hp_dem_df, aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
geom_sf_pattern(data = resort,
pattern = 'stripe',
pattern_color = "black",
pattern_alpha = 0.1,
pattern_angle = 120,
fill = NA,
pattern_density = 0.001) +
geom_sf(data = creeks, color = crk_pal) +
geom_sf(data = hogan_tracks, aes(color = year),
linewidth = 1, show.legend = F) +
scale_color_manual(values = track_pal) +
geom_sf(data = ms_lift) +
geom_sf(data = hw40, linewidth = 1.75, color = "grey60")  +
geom_sf(data = hw40, linewidth = 1.25, color = "grey80")  +
scale_x_continuous(expand = c(0.001,0.001)) +
scale_y_continuous(expand = c(0.001,0.001)) +
theme(rect = element_blank(),
panel.grid= element_line(color = "grey60",
linewidth = 0.15),
panel.ontop = TRUE,
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
coord_sf(xlim = c(351500/1000,358000/1000),
ylim = c( 4471500/1000, 4480000/1000),
crs = ncrs,
datum = ncrs)
out
out <-
ggplot() +
geom_raster(data = hill_df,
aes(x = longitude, y = latitude, fill = slope),
show.legend = F) +
scale_fill_gradient(low = "black", high = "white") +
new_scale_fill() +
geom_isobands(data = hp_dem_df, aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
geom_sf_pattern(data = resort,
pattern = 'stripe',
pattern_color = "black",
pattern_alpha = 0.1,
pattern_angle = 120,
fill = NA,
pattern_density = 0.001) +
geom_sf(data = creeks, color = crk_pal) +
geom_sf(data = hogan_tracks, aes(color = year),
linewidth = 1, show.legend = F) +
scale_color_manual(values = track_pal) +
geom_sf(data = ms_lift) +
geom_sf(data = hw40, linewidth = 1.75, color = "grey60")  +
geom_sf(data = hw40, linewidth = 1.25, color = "grey80")  +
scale_x_continuous(expand = c(0.001,0.001)) +
scale_y_continuous(expand = c(0.001,0.001)) +
theme(rect = element_blank(),
panel.grid= element_line(color = "grey60",
linewidth = 0.15),
panel.ontop = TRUE,
axis.ticks = element_blank(),
axis.title = element_blank())+
# axis.text = element_blank()) +
coord_sf(xlim = c(351500/1000,358000/1000),
ylim = c( 4471500/1000, 4480000/1000),
crs = ncrs,
datum = ncrs)
out
hogan_tracks
ggplot() +
geom_sf(data = hogan_tracks %>%
filter(year == 2022))
ggplot() +
geom_sf(data = hogan_tracks,
aes(color = year))
ggplot() +
geom_sf(data = hogan_tracks %>% filter(!year %in% c(2022, 2020)),
aes(color = year))
brks <- c(cont1, cont2)
n <- length(brks)
brks
out <-
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% fiter(fill_var == 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks)
out <-
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var == 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks)
# out <-
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var == 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks)
# out <-
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks)
hp_dem_df
# out <-
ggplotly(
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F)
)
# out <-
plotly::ggplotly(
ggplot() +
# geom_raster(data = hill_df,
#             aes(x = longitude, y = latitude, fill = slope),
#             show.legend = F) +
# scale_fill_gradient(low = "black", high = "white") +
# new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F)
)
out <-
ggplot() +
geom_raster(data = hill_df,
aes(x = longitude, y = latitude, fill = slope),
show.legend = F) +
scale_fill_gradient(low = "black", high = "white") +
new_scale_fill() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks,
show.legend = F) +
scale_fill_stepsn(colors = ws,
breaks = brks)
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks)
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks)
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
theme(legend.position = "bottom")
brks
ws
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3 & fill_var <2.355),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
theme(legend.position = "bottom")
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3 & fill_var <2.410),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
theme(legend.position = "bottom")
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3 & fill_var <2.520),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
theme(legend.position = "bottom")
ggplot() +
geom_isobands(data = hp_dem_df %>% filter(fill_var > 2.3 & fill_var <3),
aes(x = longitude,
y = latitude,
z = fill_var,
fill = fill_var),
bins = n,
alpha = 0.8,
size = 0.05,
breaks = brks) +
scale_fill_stepsn(colors = ws,
breaks = brks) +
theme(legend.position = "bottom")
brks
